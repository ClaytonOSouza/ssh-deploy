#!/bin/sh

eval $(ssh-agent -s) > /dev/null
mkdir -p ~/.ssh
mkdir -p /tmp/

echo "HOST: $HOST"
if [ -z "$HOST" ]
then
    echolor -R 'ERROR - missing variable HOST'
    exit 1
fi

echo "IP: $IP"
if [ -z "$IP" ]
then
    echolor -R 'ERROR - missing variable IP'
    exit 1
fi

echo "PUBLIC_DIRECTORY: $PUBLIC_DIRECTORY"
if [ -z "$PUBLIC_DIRECTORY" ]
then
    echolor -R 'ERROR - missing variable PUBLIC_DIRECTORY'
    exit 1
fi

if [ -z "$SSHKEY_PRIVATE" ]
then
    echolor -R 'ERROR - missing variable SSHKEY_PRIVATE'
    exit 1
fi

echo "USER_HOST: $USER_HOST"
if [ -z "$USER_HOST" ]
then
    echolor -R 'ERROR - missing variable USER_HOST'
    exit 1
fi

HTTP_DIRECTORY="http://$HOST/"

FILE_SSHKEY_PRIVATE=~/.ssh/ssh_key_private.key
echolor -C "FILE_SSHKEY_PRIVATE: $FILE_SSHKEY_PRIVATE"

echo "$SSHKEY_PRIVATE" > $FILE_SSHKEY_PRIVATE

if [ ! -f $FILE_SSHKEY_PRIVATE ]; then
    echo "ERROR - file $FILE_SSHKEY_PRIVATE not found."
    exit 1;
fi

chmod 0600 "$FILE_SSHKEY_PRIVATE"

remote_port="22"
if [ -n "$PORT" ];then
    remote_port="$PORT"
fi
echolor -C "remote_port: $remote_port"

ssh_custom_param="-o stricthostkeychecking=no -r -P $remote_port -i $FILE_SSHKEY_PRIVATE -C"
if [ -n "$SSH_CUSTOM_PARAMETER" ];then
    ssh_custom_param="$SSH_CUSTOM_PARAMETER"
    echo "SSH custom paramenters: $ssh_custom_param"
fi

echolor -C "SOURCE_DIR: $SOURCE_DIR"
if [ -z "$SOURCE_DIR" ];then
    echolor -R 'ERROR - missing variable SOURCE_DIR'
    exit 1
fi

echolor -C "Arquivos local do projeto:"
ls -la $SOURCE_DIR
echo ""

SOURCE_DIR="$SOURCE_DIR/"

echolor -C "Adicionando chaves no known_hosts...\n"
ssh-keyscan $HOST >> ~/.ssh/known_hosts &> /dev/null
ssh-keyscan $IP >> ~/.ssh/known_hosts &> /dev/null
echo ""

exclude_files=""
if [ -n "$IGNORE_FILES" ];then
    echolor -C "Ignorando arquivos:\n"
    echo $IGNORE_FILES
    echo ""
    exclude_files=`echo "$IGNORE_FILES" | sed 's/[^ ]* */--exclude=&/g'`
fi

files_selected="./"
if [ -n "$FILES" ];then
    echolor -C "Arquivos selecionados:\n"
    echo $FILES
    echo ""
    files_selected="$FILES"
fi

echolor -C "Comprimindo arquivos...\n"
echo "cd $SOURCE_DIR && tar -cj $exclude_files deploy-files.tar.bz2 $files_selected"
echo ""
cd $SOURCE_DIR && tar -cj -C $SOURCE_DIR $exclude_files -f deploy-files.tar.bz2 $files_selected

echolor -C "Run Scp...\n"
echolor -C "scp $ssh_custom_param $SOURCE_DIR/deploy-files.tar.bz2 $USER_HOST@$HOST:$PUBLIC_DIRECTORY"
echo ""
scp_output=$(scp $ssh_custom_param "$SOURCE_DIR/deploy-files.tar.bz2" "$USER_HOST@$HOST:$PUBLIC_DIRECTORY")

echolor -C "Descompactando arquivos...\n"
echo ""
export EXEC_SCRIPT="tar -xjf $PUBLIC_DIRECTORY/deploy-files.tar.bz2 -C $PUBLIC_DIRECTORY" && /scripts/ssh-exec

echolor -C "Excluindo arquivo comprimido...\n"
echo ""
export EXEC_SCRIPT="rm -rf $PUBLIC_DIRECTORY/deploy-files.tar.bz2" && /scripts/ssh-exec

if [ "$?" = "0" ]; then
    echolor -G "Success - finished scp synchronisation"
    echolor -G "See: $HTTP_DIRECTORY"
else
    echolor -R "Warning $scp_output"
    echolor -R 'ERROR - scp failed'
    exit 1
fi

rm -rf $FILE_SSHKEY_PRIVATE $SOURCE_DIR/deploy-files.tar.bz2
