#!/bin/sh

eval $(ssh-agent -s) > /dev/null
mkdir -p ~/.ssh
mkdir -p /tmp/

echo "HOST: $HOST"
if [ -z "$HOST" ]
then
    echolor -R 'ERROR - missing variable HOST'
    exit 1
fi

echo "IP: $IP"
if [ -z "$IP" ]
then
    echolor -R 'ERROR - missing variable IP'
    exit 1
fi

echo "PUBLIC_DIRECTORY: $PUBLIC_DIRECTORY"
if [ -z "$PUBLIC_DIRECTORY" ]
then
    echolor -R 'ERROR - missing variable PUBLIC_DIRECTORY'
    exit 1
fi

if [ -z "$SSHKEY_PRIVATE" ]
then
    echolor -R 'ERROR - missing variable SSHKEY_PRIVATE'
    exit 1
fi

echo "USER_HOST: $USER_HOST"
if [ -z "$USER_HOST" ]
then
    echolor -R 'ERROR - missing variable USER_HOST'
    exit 1
fi

custom_param="-razvplhHP"
if [ -n "$CUSTOM_PARAMETER" ];then
    custom_param="$CUSTOM_PARAMETER"
    echo "custom_param: $custom_param"
fi

HTTP_DIRECTORY="http://$HOST/"

FILE_SSHKEY_PRIVATE=~/.ssh/ssh_key_private.key
echolor -C "FILE_SSHKEY_PRIVATE: $FILE_SSHKEY_PRIVATE"

echo "$SSHKEY_PRIVATE" > $FILE_SSHKEY_PRIVATE

if [ ! -f $FILE_SSHKEY_PRIVATE ]; then
    echo "ERROR - file $FILE_SSHKEY_PRIVATE not found."
    exit 1;
fi

chmod 0600 "$FILE_SSHKEY_PRIVATE"

remote_port="22"
if [ -n "$PORT" ];then
    remote_port="$PORT"
fi
echo "remote_port: $remote_port"


echolor -C "remote_port: $remote_port"

rsync_command="ssh -l $USER_HOST -t -o BatchMode=yes -o StrictHostKeyChecking=no -p $remote_port -i $FILE_SSHKEY_PRIVATE"
echolor -C "rsync_command: $rsync_command"

echolor -C "SOURCE_DIR: $SOURCE_DIR"
if [ -z "$SOURCE_DIR" ];then
    echolor -R 'ERROR - missing variable SOURCE_DIR'
    exit 1
fi

echolor -C "Arquivos local do projeto:"
echolor -C "ls -la $SOURCE_DIR"
ls -la $SOURCE_DIR
echo ""

SOURCE_DIR="$SOURCE_DIR/"

exclude_from=""
if [ -n "$IGNORE_FILES" ];then
    echolor -C "Ignorando arquivos: $IGNORE_FILES\n"
    echo "$IGNORE_FILES" | tr " " "\n" >> /tmp/exclude_from.txt
    exclude_from="--exclude-from=/tmp/exclude_from.txt"
fi

delete=""
if [ "$DELETE" = "true" ];then
    echolor -C "Habilitado delete (--delete-during)\n\n"
    delete="--delete --delete-during"
fi

files_from=""
if [ -n "$FILES" ];then
    echolor -C "Arquivos selecionados: $FILES\n"
    echo "$FILES" | tr " " "\n" >> /tmp/files_from.txt
    files_from="--files-from=/tmp/files_from.txt"
fi

echolor -C "Adicionando chaves no known_hosts...\n"
ssh-keyscan $HOST >> ~/.ssh/known_hosts &> /dev/null
ssh-keyscan $IP >> ~/.ssh/known_hosts &> /dev/null

echolor -C "Executando Rsync...\n"
echolor -C "rsync --itemize-changes $delete $files_from $exclude_from --rsh=$rsync_command $SOURCE_DIR $USER_HOST@$HOST:$PUBLIC_DIRECTORY"
sync_output=$(rsync $custom_param --itemize-changes $delete $files_from $exclude_from --rsh="$rsync_command" "$SOURCE_DIR" "$USER_HOST@$HOST:$PUBLIC_DIRECTORY")

if [ "$?" = "0" ]; then
    echolor -G "Success - finished rsync synchronisation"
    echolor -G "See: $HTTP_DIRECTORY"
else
    echolor -R "Warning $sync_output"
    echolor -R 'ERROR - rsync failed'
    exit 1
fi

rm -rf $FILE_SSHKEY_PRIVATE
